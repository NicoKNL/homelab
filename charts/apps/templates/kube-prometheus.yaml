apiVersion: v1
kind: Namespace
metadata:
  name: kube-prometheus
  labels:
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/enforce-version: latest
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: 75.15.1
    helm:
      values: |
        prometheus:
          prometheusSpec:
            retention: 30d
            additionalScrapeConfigsSecret:
              enabled: true
              name: additional-scrape-configs
              key: additional-scrape-configs.yaml
            resources:
              requests:
                memory: 256Mi
                cpu: 100m
              limits:
                memory: 512Mi
                cpu: 500m
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: nfs-client
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 10Gi  # Stores metrics data, time series, and historical data
          service:
            type: NodePort
            nodePort: 30082
        grafana:
          persistence:
            enabled: true
            type: pvc
            storageClassName: nfs-client
            size: 5Gi  # Stores dashboards, data sources, and user preferences
          initChownData:
            enabled: false
          podSecurityContext:
            fsGroup: 472
            fsGroupChangePolicy: "OnRootMismatch"
          securityContext:
            runAsUser: 472
            runAsGroup: 472
            runAsNonRoot: true
          service:
            type: NodePort
            nodePort: 30083
        alertmanager:
          alertmanagerSpec:
            storage:
              volumeClaimTemplate:
                spec:
                  storageClassName: nfs-client
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 2Gi  # Stores alert history and silences
        prometheusOperator:
          enabled: true
          createCustomResource: true
          admissionWebhooks:
            enabled: false

  destination:
    server: https://kubernetes.default.svc
    namespace: kube-prometheus
  syncPolicy:
    automated:
      selfHeal: true
      prune: false
    syncOptions:
      - ServerSideApply=true
