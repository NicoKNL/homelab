version: "3"

tasks:
  bootstrap:
    desc: Bootstrap the full Talos + Cilium + ArgoCD setup
    vars:
      NODE:
    preconditions:
      - sh: '[ -n "{{.NODE}}" ]'
        msg: "NODE variable must be set (e.g., task bootstrap --NODE=192.168.50.87)"
    cmds:
      - task: _generate-talos-config
        vars: { NODE: "{{.NODE}}" }
      - task: _apply-talos-config
      - task: _bootstrap-talos
      - task: _install-cilium
      - task: _remove-flannel
      - task: _setup-argocd

  _generate-talos-config:
    vars:
      NODE:
    cmds:
      - talosctl gen config homelab https://{{.NODE}}:6443 --overwrite
      - mv ./talosconfig ~/.talos/config
      - talosctl config node {{.NODE}}
      - talosctl config endpoint {{.NODE}}

  _apply-talos-config:
    cmds:
      - yq e '.machine.install.disk = "/dev/nvme0n1"' -i controlplane.yaml
      - talosctl apply-config --insecure --file controlplane.yaml
      - talosctl patch mc --patch @talos/patches/controlplane-scheduling.yaml
      - talosctl patch mc --patch @talos/patches/network.yaml

  _bootstrap-talos:
    cmds:
      - talosctl bootstrap

  _install-cilium:
    cmds:
      - kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.1.0/config/crd/standard/gateway.networking.k8s.io_gatewayclasses.yaml
      - kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.1.0/config/crd/standard/gateway.networking.k8s.io_gateways.yaml
      - kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.1.0/config/crd/standard/gateway.networking.k8s.io_httproutes.yaml
      - kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.1.0/config/crd/standard/gateway.networking.k8s.io_referencegrants.yaml
      - kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.1.0/config/crd/standard/gateway.networking.k8s.io_grpcroutes.yaml
      - kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.1.0/config/crd/experimental/gateway.networking.k8s.io_tlsroutes.yaml

      - CILIUM_CLI_VERSION=$(curl -s https://raw.githubusercontent.com/cilium/cilium-cli/main/stable.txt)
      - CLI_ARCH=amd64
      - if [ "$(uname -m)" = "arm64" ]; then CLI_ARCH=arm64; fi
      - curl -L --fail --remote-name-all https://github.com/cilium/cilium-cli/releases/download/${CILIUM_CLI_VERSION}/cilium-darwin-${CLI_ARCH}.tar.gz{,.sha256sum}
      - shasum -a 256 -c cilium-darwin-${CLI_ARCH}.tar.gz.sha256sum
      - sudo tar xzvfC cilium-darwin-${CLI_ARCH}.tar.gz /usr/local/bin
      - rm cilium-darwin-${CLI_ARCH}.tar.gz{,.sha256sum}

      - helm repo add cilium https://helm.cilium.io/
      - helm repo update

      - |
        helm install \
        cilium \
        cilium/cilium \
        --version 1.15.6 \
        --namespace kube-system \
        --set ipam.mode=kubernetes \
        --set kubeProxyReplacement=true \
        --set securityContext.capabilities.ciliumAgent="{CHOWN,KILL,NET_ADMIN,NET_RAW,IPC_LOCK,SYS_ADMIN,SYS_RESOURCE,DAC_OVERRIDE,FOWNER,SETGID,SETUID}" \
        --set securityContext.capabilities.cleanCiliumState="{NET_ADMIN,SYS_ADMIN,SYS_RESOURCE}" \
        --set cgroup.autoMount.enabled=false \
        --set cgroup.hostRoot=/sys/fs/cgroup \
        --set k8sServiceHost=localhost \
        --set k8sServicePort=7445 \
        --set=gatewayAPI.enabled=true \
        --set=gatewayAPI.enableAlpn=true \
        --set=gatewayAPI.enableAppProtocol=true

  _remove-flannel:
    cmds:
      - kubectl delete daemonset kube-flannel -n kube-system
      - kubectl delete cm kube-flannel-cfg -n kube-system

  _setup-argocd:
    cmds:
      - kubectl create namespace argocd
      - kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
