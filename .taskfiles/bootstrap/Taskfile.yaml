version: "3"

tasks:
  default:
    desc: Bootstrap the full Talos + Cilium + ArgoCD setup
    vars:
      NODE: '{{.NODE | default ""}}'
    preconditions:
      - sh: |
          if [ -z "{{.NODE}}" ]; then
            echo "NODE variable must be set (e.g. task bootstrap NODE=192.168.50.87)"
            exit 1
          fi
    cmds:
      - task: _generate-talos-config
        vars: { NODE: "{{.NODE}}" }
      - task: _bootstrap-talos
      - task: _install-cilium
      - task: _test-cilium
      # TODO: - task: _setup-argocd

  _generate-talos-config:
    cmds:
      - talosctl gen config homelab https://{{.NODE}}:6443 --force
      - mv ./talosconfig ~/.talos/config
      - talosctl config node {{.NODE}}
      - talosctl config endpoint {{.NODE}}

  _bootstrap-talos:
    cmds:
      - yq e '.machine.install.disk = "/dev/nvme0n1"' -i controlplane.yaml
      - talosctl apply-config --insecure --nodes {{.NODE}} --file controlplane.yaml
      - sleep 60 # Wait for Talos to apply the config and reboot
      - talosctl bootstrap
      - talosctl --nodes {{.NODE}} health
      - talosctl patch mc --patch @talos/patches/controlplane-scheduling.yaml
      - talosctl patch mc --patch @talos/patches/network.yaml
      - talosctl kubeconfig --force

  _install-cilium:
    cmds:
      - kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.1.0/config/crd/standard/gateway.networking.k8s.io_gatewayclasses.yaml
      - kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.1.0/config/crd/standard/gateway.networking.k8s.io_gateways.yaml
      - kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.1.0/config/crd/standard/gateway.networking.k8s.io_httproutes.yaml
      - kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.1.0/config/crd/standard/gateway.networking.k8s.io_referencegrants.yaml
      - kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.1.0/config/crd/standard/gateway.networking.k8s.io_grpcroutes.yaml
      - kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.1.0/config/crd/experimental/gateway.networking.k8s.io_tlsroutes.yaml

      - helm repo add cilium https://helm.cilium.io/
      - helm repo update

      - |
        helm upgrade --install \
        cilium \
        cilium/cilium \
        --version 1.17.4 \
        --namespace kube-system \
        --set ipam.mode=kubernetes \
        --set kubeProxyReplacement=true \
        --set securityContext.capabilities.ciliumAgent="{CHOWN,KILL,NET_ADMIN,NET_RAW,IPC_LOCK,SYS_ADMIN,SYS_RESOURCE,DAC_OVERRIDE,FOWNER,SETGID,SETUID}" \
        --set securityContext.capabilities.cleanCiliumState="{NET_ADMIN,SYS_ADMIN,SYS_RESOURCE}" \
        --set cgroup.autoMount.enabled=false \
        --set cgroup.hostRoot=/sys/fs/cgroup \
        --set k8sServiceHost=localhost \
        --set k8sServicePort=7445 \
        --set gatewayAPI.enabled=true \
        --set gatewayAPI.enableAlpn=true \
        --set gatewayAPI.enableAppProtocol=true \
        --set operator.replicas=1

      - kubectl delete daemonset kube-flannel -n kube-system || true
      - kubectl delete cm kube-flannel-cfg -n kube-system || true

  _test-cilium:
    cmds:
      - cilium status --wait

      - kubectl create namespace cilium-test-1 || true
      - kubectl label namespace cilium-test-1 pod-security.kubernetes.io/enforce=privileged
      - cilium connectivity test --junit-file report.xml || true
      - |
        if grep -qE 'tests="[1-9][0-9]*"' report.xml && grep -q 'errors="0"' report.xml; then
          echo "✅ Cilium test passed (ignoring warnings)"
        else
          echo "❌ Cilium test failed (actual errors)"
          exit 1
        fi
